<a href="/dashboard">&larr; Back</a>
<div class="admin-title">
  <h2>View / Edit Post</h2>

  <form action="/delete-post/<%= data._id %>?_method=DELETE" method="POST">
    <input type="submit" value="Delete" class="btn-delete btn">
  </form>

</div>

<form action="/edit-post/<%= data._id %>?_method=PUT" method="POST">

  <label for="title"><b>Title</b></label>
  <input type="text" placeholder="Post Title" name="title" value="<%= data.title %>" id="titleEditPost">

  <label for="body"><b>Content</b></label>
  <div id="editor"></div>

  <input type="submit" value="Update" class="btn">

</form>

<script >

const editor = new EditorJS({
  tools: {
  header: {
          class: Header,
          inlineToolbar: ['marker', 'link'],
          config: {
            placeholder: 'Header'
          },
          shortcut: 'CMD+SHIFT+H'
        },

        /**
         * Or pass class directly without any configuration
         */
        image: SimpleImage,

        list: {
          class: List,
          inlineToolbar: true,
          shortcut: 'CMD+SHIFT+L'
        },

        checklist: {
          class: Checklist,
          inlineToolbar: true,
        },

        quote: {
          class: Quote,
          inlineToolbar: true,
          config: {
            quotePlaceholder: 'Enter a quote',
            captionPlaceholder: 'Quote\'s author',
          },
          shortcut: 'CMD+SHIFT+O'
        },

        warning: Warning,

        marker: {
          class:  Marker,
          shortcut: 'CMD+SHIFT+M'
        },

        code: {
          class:  CodeTool,
          shortcut: 'CMD+SHIFT+C'
        },

        delimiter: Delimiter,

        inlineCode: {
          class: InlineCode,
          shortcut: 'CMD+SHIFT+C'
        },

        linkTool: LinkTool,

        embed: Embed,

        table: {
          class: Table,
          inlineToolbar: true,
          shortcut: 'CMD+ALT+T'
        },  
    	raw: RawTool
  },
  holder: 'editor',
  data: <%- data.body %>
})

var form = document.querySelector("form")

form.addEventListener("submit", (e)=> {
	e.preventDefault();
	let titleEditPostText = document.querySelector("#titleEditPost").value
	editor.save().then((outputData) => {
  console.log('Article data: ', outputData)
  	 putFetch("/edit-post/<%= data._id %>", {
  		title: titleEditPostText,
  		body: JSON.stringify(outputData)
  	}).then(res => console.log(res))
}).catch((error) => {
  console.log('Saving failed: ', error)
});
})

async function putFetch(url = "", data = {}) {
  // Default options are marked with *
  const response = await fetch(url, {
    method: "PUT", // *GET, POST, PUT, DELETE, etc.
    mode: "cors", // no-cors, *cors, same-origin
    cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
    credentials: "same-origin", // include, *same-origin, omit
    headers: {
      "Content-Type": "application/json",
      // 'Content-Type': 'application/x-www-form-urlencoded',
    },
    redirect: "follow", // manual, *follow, error
    referrerPolicy: "no-referrer", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
    body: JSON.stringify(data), // body data type must match "Content-Type" header
  });
  return response.json(); // parses JSON response into native JavaScript objects
}

</script>